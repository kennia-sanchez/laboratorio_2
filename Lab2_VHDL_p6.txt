LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_unsigned.all;


ENTITY part6 IS 
   PORT ( SW : IN STD_LOGIC_VECTOR(5 DOWNTO 0);
          HEX1, HEX0 : OUT STD_LOGIC_VECTOR(6 DOWNTO 0));  -- 7-segs
END part6;

ARCHITECTURE Behavior OF part6 IS
   COMPONENT bcd7seg6
      PORT ( B : IN  STD_LOGIC_VECTOR(3 DOWNTO 0);
             H : OUT STD_LOGIC_VECTOR(0 TO 6));
   END COMPONENT;
	
   SIGNAL num, num_t, num_u : STD_LOGIC_VECTOR(5 DOWNTO 0);
BEGIN
--                                                  
--    b5 b4 b3 b2 b1 b0      num_unit      num_unit                                              
--     0  0  0  0  0  0    7segmentCode  7segmentCode   
--     0  0  0  0  0  1    7segmentCode  7segmentCode   
--     0  0  0  0  1  0    7segmentCode  7segmentCode   
--     0  0  0  0  1  1    7segmentCode  7segmentCode   
--           ...                                         
--     1  1  1  1  1  1    7segmentCode  7segmentCode   

   
   num <= SW;

   -- Check tens range and get tens and units.
   PROCESS (num)
   BEGIN
      IF (num < "001010") THEN
         num_t <= "000000";
         num_u <= num;
      ELSIF (num < "010100") THEN
         num_t <= "000001";
         num_u <= num - "001010";   
      ELSIF (num < "011110") THEN
         num_t <= "000010";
         num_u <= num - "010100";   
      ELSIF (num < "101000") THEN
         num_t <= "000011";
         num_u <= num - "011110";   
      ELSIF (num < "110010") THEN
         num_t <= "000100";
         num_u <= num - "101000";   
      ELSIF (num < "111100") THEN
         num_t <= "000101";
         num_u <= num - "110010";   
      ELSE
         num_t <= "000110";
         num_u <= num - "111100";   
      END IF;
   END PROCESS;

   --                                                   --........bcd 7 segment decoder
   H_1: bcd7seg6 PORT MAP (num_t(3 DOWNTO 0), HEX1);    -- Display num_tens in 7 segment Display:         HEX1
   H_0: bcd7seg6 PORT MAP (num_u(3 DOWNTO 0), HEX0);    -- Display num_unit in 7 segment Display:         HEX0
   
END Behavior;

         
         

			
			
			
LIBRARY ieee;
USE ieee.std_logic_1164.all;

--   .-._.-._.-._.-._.-._.-._.-._.-._.-._.-._.-._.-.
--  (                                               )
--   )   BCD to 7 Segment Display Decoder          (
--  (                                               )
--   ._.-._.-._.-._.-._.-._.-._.-._.-._.-._.-._.-._.

ENTITY bcd7seg6 IS
   PORT ( B : IN  STD_LOGIC_VECTOR(3 DOWNTO 0);
          H : OUT STD_LOGIC_VECTOR(6 DOWNTO 0));
END bcd7seg6;

ARCHITECTURE Behavior OF bcd7seg6 IS
BEGIN

   --                           B        H
   --       0                ----------------
   --      ---                0000    0000001
   --     |   |               0001    1001111
   --    5|   |1              0010    0010010
   --     | 6 |               0011    0000110
   --      ---                0100    1001100
   --     |   |               0101    0100100
   --    4|   |2              0110    0100000
   --     |   |               0111    0001111
   --      ---                1000    0000000
   --       3                 1001    0000100
   --

   H(0) <= (NOT(B(3)) AND B(2) AND NOT(B(1)) AND NOT(B(0))) OR 
      (NOT(B(3)) AND NOT(B(2)) AND NOT(B(1)) AND B(0));
   H(1) <= (B(2) AND NOT(B(1)) AND B(0)) OR
      (B(2) AND B(1) AND NOT(B(0)));
   H(2) <= (NOT(B(2)) AND B(1) AND NOT(B(0)));
   H(3) <= (NOT(B(3)) AND NOT(B(2)) AND NOT(B(1)) AND B(0)) OR 
      (NOT(B(3)) AND B(2) AND NOT(B(1)) AND NOT(B(0))) OR (NOT(B(3)) AND B(2) AND B(1) AND B(0));
   H(4) <= (NOT(B(1)) AND B(0)) OR (NOT(B(3)) AND B(0)) OR 
      (NOT(B(3)) AND B(2) AND NOT(B(1)));
   H(5) <= (B(1) AND B(0)) OR (NOT(B(2)) AND B(1)) OR 
      (NOT(B(3)) AND NOT(B(2)) AND B(0));
   H(6) <= (B(2) AND B(1) AND B(0)) OR (NOT(B(3)) AND NOT(B(2)) AND NOT(B(1)));
END Behavior;
